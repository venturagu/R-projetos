data()
iris
CO2
install.packages("dslabs")
murders
str(murders)
library(dslabs)
data(murders)
murders
class(murders)
str(murders)
str(murders)
library(dslabs)
data(murders)
murders
class(murders)
x<-murders
x<-5
str(murders)
murders[1,]
murders[,1]
View(murders)
murders&state
state.abb
murders$state
pais<- c('Itália', 'Canada', 'Egito')
seq(1, 10, 2)
seq(from = 1, to = 10, by = 2)
which(murders$total == 2)
which(murders$population ==max(murders$population))
murders$population
pop<-murders$population
pop<-sort(pop)
pop
pop[1]
pop[1]
pop[-1]
murders[which(murders$population==pop[1]),]
murders[which(murders$population==pop[1])]
murders[which(murders$population==pop[1]),]
murders$population[pop[1]]
murders[pop[1],]
murders[p[1],]
#carregar dataset:
View(murders)
library(dplyr)
library(ggplot2)
library(dslabs)
# pista visuais são
#elementos que vamos colocando no nosso grafo para melhor visualização
#carregar dataset:
View(murders) # visualizar dataset
ggplot(data = murders)
p <- ggplot(data = murders)
class(p)
ggplot(data = murders) +
geom_point(aes(x = population/10^6),
y = total)
a escala da população para melhor visualização dividindo por 10/6
ggplot(data = murders) +
geom_point(aes(x = population/10^6),
y = total))
#vamos dimuir a escala da população para melhor visualização dividindo por 10/6
ggplot(data = murders) +
geom_point(aes(x = population/10^6,
y = total))
ggplot(data = murders) + geom_point(aes(x = population/10^6, y = total)) +
geom_text(aes(x = population/10^6, y = total, label = abb))
ggplot(data = murders) + geom_point(aes(x = population/10^6, y = total), size = 3) +
geom_text(aes(x = population/10^6, y = total, label = abb))
ggplot(data = murders) + geom_point(aes(x = population/10^6, y = total), size = 3) +
geom_text(aes(x = population/10^6, y = total, label = abb), nudge_x = 1)
ggplot(data = murders) + geom_point(aes(x = population/10^6, y = total), size = 3) +
geom_text(aes(x = population/10^6, y = total, label = abb), nudge_x = 1)
ggplot(data = murders) + geom_point(aes(x = population/10^6, y = total), size = 3) +
geom_text(aes(x = population/10^6, y = total, label = abb), nudge_x = 0.05)
ggplot(data = murders) + geom_point(aes(x = population/10^6, y = total), size = 3) +
geom_text(aes(x = population/10^6, y = total, label = abb), nudge_x = 0.05) +
scale_x_continuous(trans = "log10") +
scale_y_continuous(trans = "log10")
setwd("~/Documents/topicos_BD/Projeto1 - Crimes in Boston")
library(dplyr)
library(ggplot2)
library(dslabs)
crimes <- read.csv("crime.csv", sep=",")
ncol(crimes)
nrow(crimes)
# Filtro todos os crimes relacionado a homicidio, drogas e roubo
crimeFilter <- filter(crimes, OFFENSE_CODE_GROUP == "Homicide" | OFFENSE_CODE_GROUP == "Drug Violation" | OFFENSE_CODE_GROUP == "Larceny")
crimesEspecificos <- factor(crimeFilter)
crimeFilterTable <- table(crimesEspecificos)
convertedCrime <- as.data.frame(crimeFilterTable)
ggplot(convertedCrime, aes(x = OFFENSE_CODE_GROUP, y = Freq, colour = OFFENSE_CODE_GROUP)) +
geom_point()
ggplot(convertedCrime, aes(x = Hour, y = Freq, colour = OFFENSE_CODE_GROUP)) +
geom_point()
# Filtro todos os crimes relacionado a homicidio, drogas e roubo
crimeFilter <- filter(crimes, OFFENSE_CODE_GROUP == "Homicide" | OFFENSE_CODE_GROUP == "Drug Violation" | OFFENSE_CODE_GROUP == "Larceny")
crimesEspecificos <- factor(crimeFilter$OFFENSE_CODE_GROUP)
crimeFilterTable <- table(crimesEspecificos)
convertedCrime <- as.data.frame(crimeFilterTable)
ggplot(convertedCrime, aes(x = Hour, y = Freq, colour = OFFENSE_CODE_GROUP)) +
geom_point()
crimesEspecificos
ggplot(convertedCrime, aes(x = crimesEspecificos, y = Freq, colour = OFFENSE_CODE_GROUP)) +
geom_point()
ggplot(convertedCrime, aes(x = crimesEspecificos, y = Freq, colour = crimesEspecificos)) +
geom_point()
head(convertedCrime, n =2)
head(convertedCrime, n =3)
head(convertedCrime, n =4)
crimesEspecificos
table(crimeFilter)
crimeFilter <- filter(crimes, OFFENSE_CODE_GROUP == "Homicide" | OFFENSE_CODE_GROUP == "Drug Violation" | OFFENSE_CODE_GROUP == "Larceny")
solution<-as.data.frame(table(unlist(crimeFilter)))
solution
View(solution)
# Filtro todos os crimes relacionado a homicidio, drogas e roubo
crimeFilter <- filter(crimes, OFFENSE_CODE_GROUP == "Homicide" | OFFENSE_CODE_GROUP == "Drug Violation" | OFFENSE_CODE_GROUP == "Larceny")
solution<-as.data.frame(table(unlist(crimeFilter$HOUR)))
View(solution)
# Filtro todos os crimes relacionado a homicidio, drogas e roubo
homicideFilter <- filter(crimes, OFFENSE_CODE_GROUP == "Homicide")
drugFilter <- filter(crimes, OFFENSE_CODE_GROUP == "Drug Violation")
larcenyFilter <- filter(crimes, OFFENSE_CODE_GROUP == "Larceny")
homicide<-as.data.frame(table(unlist(homicideFilter$HOUR)))
drug<-as.data.frame(table(unlist(drugFilter$HOUR)))
larceny<-as.data.frame(table(unlist(larcenyFilter$HOUR)))
View(homicide)
str(homicide)
# Filtro todos os crimes relacionado a homicidio, drogas e roubo
homicideFilter <- filter(crimes, OFFENSE_CODE_GROUP == "Homicide")
drugFilter <- filter(crimes, OFFENSE_CODE_GROUP == "Drug Violation")
larcenyFilter <- filter(crimes, OFFENSE_CODE_GROUP == "Larceny")
homicide<-as.data.frame(table(unlist(homicideFilter$HOUR)))
drug<-as.data.frame(table(unlist(drugFilter$HOUR)))
larceny<-as.data.frame(table(unlist(larcenyFilter$HOUR)))
str(homicide)
df_crimes <- data.frame(Hour = homicide$Var1, Homocide = homicide$Freq, Drug_Violation = drug$Freq, Larceny = larceny$Freq )
View(df_crimes)
ggplot(df_crimes, aes(x=hour, y=value, fill=variable)) + geom_bar(stat='identity')
ggplot(df_crimes, aes(x=Hour, y=value, fill=variable)) + geom_bar(stat='identity')
# melt a data.frame
library(reshape2)
#when you melt essentially you create only one column with the value
#and one column with the variable i.e. your others columns
df <- melt(df_crimes, id.vars='Hour')
ggplot(df, aes(x=m, y=value, fill=variable)) +
geom_bar(stat='identity', position='dodge')
df_crimes <- data.frame(Hour = homicide$Var1, Homocide = homicide$Freq, Drug_Violation = drug$Freq, Larceny = larceny$Freq )
View(df_crimes)
#when you melt essentially you create only one column with the value
#and one column with the variable i.e. your others columns
df <- melt(df_crimes, id.vars='Hour')
ggplot(df, aes(x=Hour, y=value, fill=variable)) +
geom_bar(stat='identity', position='dodge')
# Filtro todos os crimes relacionado a homicidio, drogas e roubo
homicideFilter <- filter(crimes, OFFENSE_CODE_GROUP == "Homicide")
drugFilter <- filter(crimes, OFFENSE_CODE_GROUP == "Drug Violation")
larcenyFilter <- filter(crimes, OFFENSE_CODE_GROUP == "Larceny")
homicide_hour<-as.data.frame(table(unlist(homicideFilter$HOUR)))
drug_hour<-as.data.frame(table(unlist(drugFilter$HOUR)))
larceny_hour<-as.data.frame(table(unlist(larcenyFilter$HOUR)))
homicide_day_of_week<-as.data.frame(table(unlist(homicideFilter$DAY_OF_WEEK)))
drug_day_of_week<-as.data.frame(table(unlist(drugFilter$DAY_OF_WEEK)))
larceny_day_of_week<-as.data.frame(table(unlist(larcenyFilter$DAY_OF_WEEK)))
df_crimes_hour <- data.frame(Hour = homicide_hour$Var1, Homocide = homicide_hour$Freq, Drug_Violation = drug_hour$Freq, Larceny = larceny_hour$Freq )
df_crimes_day_of_week <- data.frame(Hour = homicide_day_of_week$Var1, Homocide = homicide_day_of_week$Freq, Drug_Violation = drug_day_of_week$Freq, Larceny = larceny_day_of_week$Freq )
View(df_crimes)
#when you melt essentially you create only one column with the value
#and one column with the variable i.e. your others columns
df_hour <- melt(df_crimes_hour, id.vars='Hour')
df_day_of_week <- melt(df_crimes_day_of_week, id.vars='Hour')
ggplot(df_hour, aes(x=Hour, y=value, fill=variable)) +
geom_bar(stat='identity', position='dodge')
ggplot(df_day_of_week, aes(x=Hour, y=value, fill=variable)) +
geom_bar(stat='identity', position='dodge')
ggplot(df_day_of_week, aes(x=Hour, y=value, fill=variable)) +
geom_bar(stat='identity')
is.na(crimes)
vandalism <- filter(crimes, OFFENSE_DESCRIPTION == "VANDALISM")
vandalism
#Nesse decidimos aplicar algo para calcular frequencia de dados nominais/ordinais
#Chamados com mais frequencia
categorias_de_crimes <- factor(crimes$OFFENSE_CODE_GROUP)
categorias_de_crimes
categoryTable <- table(categorias_de_crimes)
converted <- as.data.frame(categoryTable)
crimes_mais_cometidos <- filter(converted, Freq > 15000)
crimes_mais_cometidos
ggplot(crimes_mais_cometidos ,aes(x = categorias_de_crimes, y = Freq)) +
geom_point() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library("tidyr")
library(dplyr)
library(ggplot2)
library(dslabs)
library(reshape2) # melt a data.frame
# setwd("~/Documents/R aulas/projeto1")
# ------------------------------------ Leitura do CSV --------------------------
crimes <- read.csv("crime.csv", sep=",", na.strings = c('','NA','na','N/A','n/a','NaN','nan'))
nrow(crimes)
ncol(crimes)
dim(crimes)
View(head(crimes, n=100))
str(crimes)
View(sapply(crimes, function(x) sum(is.na(x))))
min(crimes$OCCURRED_ON_DATE)
max(crimes$OCCURRED_ON_DATE)
head(crimes$YEAR, 10)
tail(crimes$YEAR, 10)
data_2015_2010<- filter(crimes, YEAR%in%c(2015, 2010))
maior_lat = max(crimes$Lat, na.rm=T)
menor_lat = min(crimes$Lat, na.rm=T)
maior_long = max(crimes$Long, na.rm=T)
menor_long = min(crimes$Long, na.rm=T)
# Mapa dos crimes agrupado por distrito de Boston
ggplot(crimes, aes(x = Long, y = Lat, group=DISTRICT, colour = DISTRICT))+
geom_point(size = 1, alpha = 1) +
xlim(-71.15,-70.90) +
ylim(42.2,42.4) +
ggtitle("Crimes ocorridos na região de Boston separado por distritos")
#Nesse decidimos aplicar algo para calcular frequencia de dados nominais/ordinais
#Chamados com mais frequencia
categorias_de_crimes <- factor(crimes$OFFENSE_CODE_GROUP)
categorias_de_crimes
categoryTable <- table(categorias_de_crimes)
converted <- as.data.frame(categoryTable)
crimes_mais_cometidos <- filter(converted, Freq > 15000)
crimes_mais_cometidos
ggplot(crimes_mais_cometidos ,aes(x = categorias_de_crimes, y = Freq)) +
geom_point() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#Distritos com mais ocorrencias
distritos <- factor(crimes$DISTRICT)
distritosTable <- table(distritos)
convertedDistrict <- as.data.frame(distritosTable)
convertedDistrict
ggplot(convertedDistrict, aes(x = distritos, y = Freq)) +
geom_point()
# Identificar todos os tipos de crimes presentes
unique(crimes$OFFENSE_CODE_GROUP)
# Filtro de todos os crimes relacionado a homicidio, drogas e roubo
homicideFilter <- filter(crimes, OFFENSE_CODE_GROUP == "Homicide")
drugFilter <- filter(crimes, OFFENSE_CODE_GROUP == "Drug Violation")
larcenyFilter <- filter(crimes, OFFENSE_CODE_GROUP == "Larceny")
# Tabela de quantidade de crimes de homicidio, drogas e roubo por hora do dia
homicide_hour<-as.data.frame(table(unlist(homicideFilter$HOUR)))
drug_hour<-as.data.frame(table(unlist(drugFilter$HOUR)))
larceny_hour<-as.data.frame(table(unlist(larcenyFilter$HOUR)))
# Tabela de quantidade de crimes de homicidio, drogas e roubo por dia da semana
homicide_day_of_week<-as.data.frame(table(unlist(homicideFilter$DAY_OF_WEEK)))
drug_day_of_week<-as.data.frame(table(unlist(drugFilter$DAY_OF_WEEK)))
larceny_day_of_week<-as.data.frame(table(unlist(larcenyFilter$DAY_OF_WEEK)))
# Criando dataframes estruturado por horas e dias da semana para os crimes filtrados
df_crimes_hour <- data.frame(Hour = homicide_hour$Var1, Homocide = homicide_hour$Freq, Drug_Violation = drug_hour$Freq, Larceny = larceny_hour$Freq )
df_crimes_day_of_week <- data.frame(Hour = homicide_day_of_week$Var1, Homocide = homicide_day_of_week$Freq, Drug_Violation = drug_day_of_week$Freq, Larceny = larceny_day_of_week$Freq )
View(df_crimes)
#when you melt essentially you create only one column with the value
#and one column with the variable i.e. your others columns
df_hour <- melt(df_crimes_hour, id.vars='Hour')
df_day_of_week <- melt(df_crimes_day_of_week, id.vars='Hour')
# Grafico de barras crimes filtrados por hora e por dia da semana
ggplot(df_hour, aes(x=Hour, y=value, fill=variable)) +
geom_bar(stat='identity', position='dodge')
ggplot(df_day_of_week, aes(x=Hour, y=value, fill=variable)) +
geom_bar(stat='identity', position='dodge')
View(geral_distric)
geral_distric<-as.data.frame(table(unlist(geralFilter$DISTRICT)))
View(geral_distric)
library("tidyr")
library(dplyr)
library(ggplot2)
library(dslabs)
library(reshape2) # melt a data.frame
# setwd("~/Documents/topicos_BD/Projeto1 - Crimes in Boston")
# ------------------------------------ Leitura do CSV --------------------------
crimes <- read.csv("crime.csv", sep=",", na.strings = c('','NA','na','N/A','n/a','NaN','nan'))
# ----------------------------------- Exploração do dataset --------------------
nrow(crimes)
ncol(crimes)
dim(crimes)
View(head(crimes, n=5))
str(crimes)
# Após a visalização de uma amostra do dataset com 10 linhas
# foi possivel perceber valores vazios para coluna SHOOTING,
# então foi realizado um exploração para entender o numero de dados vazios nas features.
# Desta forma SHOTTING apresentou o maior numero de dados vazios com 318054 registros NA.
View(sapply(crimes, function(x) sum(is.na(x))))
# Retorna a menor e maior data de ocorrencia de crime presente no dataset
min(crimes$OCCURRED_ON_DATE)
max(crimes$OCCURRED_ON_DATE)
# ---------------------------------- Exploração inicial com medidas estatísticas
head(crimes$YEAR, 10)
tail(crimes$YEAR, 10)
data_2015_2010<- filter(crimes, YEAR%in%c(2015, 2010))
# Retornar o menor e o maior indice de latitude e longitude para realizar a escala do mapa de crimes de boston
maior_lat = max(crimes$Lat, na.rm=T)
menor_lat = min(crimes$Lat, na.rm=T)
maior_long = max(crimes$Long, na.rm=T)
menor_long = min(crimes$Long, na.rm=T)
# Mapa dos crimes agrupado por distrito de Boston
ggplot(crimes, aes(x = Long, y = Lat, group=DISTRICT, colour = DISTRICT))+
geom_point(size = 1, alpha = 1) +
xlim(-71.15, -70.90) +
ylim(42.2,42.4) +
ggtitle("Crimes ocorridos na região de Boston separado por distritos")
# Mapa dos crimes agrupados por tipo de ofensa
ggplot(crimes, aes(x = Long, y = Lat, group=OFFENSE_CODE, colour = OFFENSE_CODE))+
geom_point(size = 1, alpha = 1) +
xlim(-71.15, -70.90) +
ylim(42.2, 42.4) +
ggtitle("Crimes ocorridos na região de Boston separado por tipos ofensa de crimes")
#Nesse decidimos aplicar algo para calcular frequencia de dados nominais/ordinais
#Chamados com mais frequencia
categorias_de_crimes <- factor(crimes$OFFENSE_CODE_GROUP)
categorias_de_crimes
categoryTable <- table(categorias_de_crimes)
converted <- as.data.frame(categoryTable)
crimes_mais_cometidos <- filter(converted, Freq > 15000)
crimes_mais_cometidos
ggplot(crimes_mais_cometidos ,aes(x = categorias_de_crimes, y = Freq)) +
geom_point() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#Histogramas de tipos de ocorrencia
barplot(crimes_mais_cometidos$Freq, names.arg = crimes_mais_cometidos$categorias_de_crimes)
#Distritos com mais ocorrencias
distritos <- factor(crimes$DISTRICT)
distritosTable <- table(distritos)
convertedDistrict <- as.data.frame(distritosTable)
convertedDistrict
ggplot(convertedDistrict ,aes(x = distritos, y = Freq)) +
geom_point()
barplot(convertedDistrict$Freq, names.arg = convertedDistrict$distritos)
ggplot(convertedDistrict, aes(x = distritos, y = Freq)) +
geom_point()
# ------------------------------------ Análises --------------------------------
# Insight buscado -> Quando os crimes ocorrem?
# Identificar todos os tipos de crimes presentes
unique(crimes$OFFENSE_CODE_GROUP)
# Filtro de todos os crimes relacionado a homicidio, drogas e roubo
homicideFilter <- filter(crimes, OFFENSE_CODE_GROUP == "Homicide")
drugFilter <- filter(crimes, OFFENSE_CODE_GROUP == "Drug Violation")
larcenyFilter <- filter(crimes, OFFENSE_CODE_GROUP == "Larceny")
# Tabela de quantidade de crimes de homicidio, drogas e roubo por hora do dia
homicide_hour<-as.data.frame(table(unlist(homicideFilter$HOUR)))
drug_hour<-as.data.frame(table(unlist(drugFilter$HOUR)))
larceny_hour<-as.data.frame(table(unlist(larcenyFilter$HOUR)))
# Tabela de quantidade de crimes de homicidio, drogas e roubo por dia da semana
homicide_day_of_week<-as.data.frame(table(unlist(homicideFilter$DAY_OF_WEEK)))
drug_day_of_week<-as.data.frame(table(unlist(drugFilter$DAY_OF_WEEK)))
larceny_day_of_week<-as.data.frame(table(unlist(larcenyFilter$DAY_OF_WEEK)))
# Criando dataframes estruturado por horas e dias da semana para os crimes filtrados
df_crimes_hour <- data.frame(Hour = homicide_hour$Var1, Homocide = homicide_hour$Freq, Drug_Violation = drug_hour$Freq, Larceny = larceny_hour$Freq )
df_crimes_day_of_week <- data.frame(Hour = homicide_day_of_week$Var1, Homocide = homicide_day_of_week$Freq, Drug_Violation = drug_day_of_week$Freq, Larceny = larceny_day_of_week$Freq )
View(df_crimes_hour)
#when you melt essentially you create only one column with the value
#and one column with the variable i.e. your others columns
df_hour <- melt(df_crimes_hour, id.vars='Hour')
df_day_of_week <- melt(df_crimes_day_of_week, id.vars='Hour')
View(df_hour)
# Grafico de barras crimes filtrados por hora e por dia da semana
ggplot(df_hour, aes(x=Hour, y=value, fill=variable)) +
geom_bar(stat='identity', position='dodge')
ggplot(df_day_of_week, aes(x=Hour, y=value, fill=variable)) +
geom_bar(stat='identity', position='dodge')
# ------------------------------------------------------------------------------
# Insight procurado -> Onde os crimes ocorrem?
# Filtro de todos os crimes relacionado a homicidio, drogas e roubo
homicideFilter <- filter(crimes, OFFENSE_CODE_GROUP == "Homicide")
drugFilter <- filter(crimes, OFFENSE_CODE_GROUP == "Drug Violation")
larcenyFilter <- filter(crimes, OFFENSE_CODE_GROUP == "Larceny")
geralFilter <- filter(crimes, OFFENSE_CODE_GROUP == "Homicide" | OFFENSE_CODE_GROUP == "Drug Violation" | OFFENSE_CODE_GROUP == "Larceny")
# Mapa dos crimes agrupados por crimes de roubo, assasinato e drogas
# apresentação de forma unida no mesmo ambiente
grafico <- ggplot(geralFilter, aes(x = Long, y = Lat, group=OFFENSE_CODE_GROUP, color = OFFENSE_CODE_GROUP))+
geom_point(size = 1.2, alpha = 0.9) +
xlim(-71.15, -70.90) +
ylim(42.2, 42.4)
grafico + scale_color_manual(values=c("#E69F00", "red", "#56B4E9"))
# Mapa de crimes de roubo, assasinato e drogas plotadas de forma separada
grafico <- ggplot(geralFilter, aes(x = Long, y = Lat, group=OFFENSE_CODE_GROUP, color = OFFENSE_CODE_GROUP))+
geom_point(size = 1.2, alpha = 0.9) +
xlim(-71.15, -70.90) +
ylim(42.2, 42.4) +
facet_grid(.~OFFENSE_CODE_GROUP)
grafico + scale_color_manual(values=c("#E69F00", "red", "#56B4E9"))
#Apresente este mesmo gráfico com os pontos coloridos pela região.
ggplot(geralFilter, aes(x = Long, y = Lat, group=DISTRICT, colour = DISTRICT))+
geom_point(size = 1, alpha = 1) +
xlim(-71.15, -70.90) +
ylim(42.2,42.4) +
facet_grid(.~OFFENSE_CODE_GROUP)
# ------------------------------------------------------------------------------
# Explorando os dados temporais
#Para os crimes tratados anteriormente, plote séries temporais que
#apresentem como estes crimes tem evoluído ao longo dos anos, no geral.
homicide_year<-as.data.frame(table(unlist(homicideFilter$YEAR)))
drug_year<-as.data.frame(table(unlist(drugFilter$YEAR)))
larceny_year<-as.data.frame(table(unlist(larcenyFilter$YEAR)))
crimesYears <- data.frame(Year = homicide_year$Var1, Homocide = homicide_year$Freq, Drug_Violation = drug_year$Freq, Larceny = larceny_year$Freq )
df_years <- melt(crimesYears, id.vars='Year')
View(larceny_year)
ggplot(df_years, aes(x=Year, y=value, fill=variable)) +
geom_bar(stat='identity', position='dodge')
ggplot(data=df_years, aes(x=Year, y=value, group=variable, color=variable)) +
geom_line()+
geom_point()
#Para os crimes tratados anteriormente, plote séries temporais, considerando
#apenas as 3 regiões mais violentas.
#Preparação dos dados para todos os crimes
geral_distric<-as.data.frame(table(unlist(geralFilter$DISTRICT)))
View(geral_distric)
geral_distric<-as.data.frame(table(unlist(geralFilter$DISTRICT)))
View(geral_distric)
View(geral_distric)
View(geral_district)
View(geralFilter)
more_dist <- filter(geralFilter, DISTRICT == "D4" | DISTRICT == "A1"| DISTRICT == "B2")
more_dist <- filter(geralFilter, DISTRICT == "D4" | DISTRICT == "A1"| DISTRICT == "B2")
View(more_dist)
